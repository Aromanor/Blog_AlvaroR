[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "¡Bienvenid@ a mi blog!",
    "section": "",
    "text": "Posts:\nAquí publico notas sobre temas interesantes:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPrimer post sobre mi perfil\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nAug 5, 2024\n\n\nAlvaro Romano\n\n\n\n\n\n\n\n\n\n\n\n\nPrimer post sobre mi perfil\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nAug 5, 2024\n\n\nAlvaro Romano\n\n\n\n\n\n\n\n\n\n\n\n\nAcerca de mi\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nAug 2, 2024\n\n\nAlvaro Romano\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Primer post sobre mi perfil",
    "section": "",
    "text": "Transfer learning consists of taking features learned on one problem, and leveraging them on a new, similar problem. For instance, features from a model that has learned to identify racoons may be useful to kick-start a model meant to identify skunks.\nTransfer learning is usually done for tasks where your dataset has too little data to train a full-scale model from scratch.\nThe most common incarnation of transfer learning in the context of deep learning is the following workflow:\n\nTake layers from a previously trained model.\nFreeze them, so as to avoid destroying any of the information they contain during future training rounds.\nAdd some new, trainable layers on top of the frozen layers. They will learn to turn the old features into predictions on a new dataset.\nTrain the new layers on your dataset.\n\nA last, optional step, is fine-tuning, which consists of unfreezing the entire model you obtained above (or part of it), and re-training it on the new data with a very low learning rate. This can potentially achieve meaningful improvements, by incrementally adapting the pretrained features to the new data.\nFirst, we will go over the Keras trainable API in detail, which underlies most transfer learning and fine-tuning workflows.\nThen, we’ll demonstrate the typical workflow by taking a model pretrained on the ImageNet dataset, and retraining it on the Kaggle “cats vs dogs” classification dataset.\nThis is adapted from Deep Learning with R and the 2016 blog post “building powerful image classification models using very little data”.\nReference: https://tensorflow.rstudio.com/guides/keras/transfer_learning"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Acerda de este blog",
    "section": "",
    "text": "Contexto\nEste Blog es acerca de mi, sobre mi experiencia y trayectoria.\nProfesional con conocimiento e interés en el análisis de datos. Con habilidades de trabajo como toma de decisiones, planeación, capacidad de adaptación y desarrollo de Dashboards para la toma de decisiones en cualquier entorno."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Acerca de mi",
    "section": "",
    "text": "Esto es a primera vista algo de mi y mi proyecto de NLP:\n\nMe encuentro realizando un proyecto aplicado al afinamiento de una inteligencia artificial, para generar clasificaciones de texto académico en base a un entrenamiento con textos calificados y validados por medio de “Inter-rater Analisis”.\n\n# O si necesitas proporcionar la ruta completa\ndf &lt;- readxl::read_excel(\"C:/Users/alvar/OneDrive/Escritorio/Blog_AlvaroR/ECO_1.xlsx\")\n\n# Mostrar las primeras filas del data frame\nhead(df)\n\n# A tibble: 6 × 6\n     ID Introducción             `Argumento base` `Argumento o razón` Conclusión\n  &lt;dbl&gt; &lt;chr&gt;                    &lt;chr&gt;            &lt;chr&gt;               &lt;chr&gt;     \n1     1 \"El bajo nivel en lectu… \"En primer luga… \"En segundo lugar,… Gracias a…\n2     2 \"El bajo nivel en lectu… \"En primer luga… \"La escritura es f… En conclu…\n3     3 \"El bajo nivel en lectu… \"En primer luga… \"En segundo lugar,… En conclu…\n4     4 \"El bajo nivel en lectu… \"En primer luga… \"Leer y escribir s… En conclu…\n5     5 \"El bajo nivel en lectu… \"En primer luga… \"Además, creo que … En conclu…\n6     6 \"El bajo nivel en lectu… \"En primer luga… \"En segundo lugar,… De acuerd…\n# ℹ 1 more variable: `Descripción de nivel` &lt;chr&gt;"
  },
  {
    "objectID": "posts/post-with-code/index.html#introduction",
    "href": "posts/post-with-code/index.html#introduction",
    "title": "Primer post sobre mi perfil",
    "section": "",
    "text": "Transfer learning consists of taking features learned on one problem, and leveraging them on a new, similar problem. For instance, features from a model that has learned to identify racoons may be useful to kick-start a model meant to identify skunks.\nTransfer learning is usually done for tasks where your dataset has too little data to train a full-scale model from scratch.\nThe most common incarnation of transfer learning in the context of deep learning is the following workflow:\n\nTake layers from a previously trained model.\nFreeze them, so as to avoid destroying any of the information they contain during future training rounds.\nAdd some new, trainable layers on top of the frozen layers. They will learn to turn the old features into predictions on a new dataset.\nTrain the new layers on your dataset.\n\nA last, optional step, is fine-tuning, which consists of unfreezing the entire model you obtained above (or part of it), and re-training it on the new data with a very low learning rate. This can potentially achieve meaningful improvements, by incrementally adapting the pretrained features to the new data.\nFirst, we will go over the Keras trainable API in detail, which underlies most transfer learning and fine-tuning workflows.\nThen, we’ll demonstrate the typical workflow by taking a model pretrained on the ImageNet dataset, and retraining it on the Kaggle “cats vs dogs” classification dataset.\nThis is adapted from Deep Learning with R and the 2016 blog post “building powerful image classification models using very little data”.\nReference: https://tensorflow.rstudio.com/guides/keras/transfer_learning"
  }
]